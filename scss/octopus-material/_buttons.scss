@import "uwp/uwp-buttons";
@import "uwp/uwp-buttons";

.btn {
  position: relative; //Octocus custom code
  display: inline-block;
  font-weight: $btn-font-weight;
  font-size: $btn-font-size;
  padding: 0 $btn-side-padding; //Octopus custom code
  height: $btn-height; //Octopus custom code
  line-height: $btn-height; //Octopus custom code
  border-radius: $btn-border-radius; //Octopus custom code
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: none; //Octopus custom code
  //@include button-size($input-btn-padding-y, $input-btn-padding-x, $font-size-base, $input-btn-line-height, $btn-border-radius);
  //@include transition($btn-transition);
  background: transparent; //Octopus custom code
  text-transform: uppercase; //Octopus custom code
  z-index: 1; //Octopus custom code

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }


  &:focus,
  &.focus {
    outline: 0;
    //box-shadow: $btn-focus-box-shadow;
  }

  &:active,
  &.active {
    background-image: none;
    //@include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
  }
}

.btn-flat,
.btn-solid {
  @extend .btn;
}

.btn-raised {
  @extend .btn-solid;

  @include elevate("2dp");

  &:active {
    @include elevate("4dp");
  }

  transition: box-shadow 150ms;
}

.btn-borderless {
  @extend .btn;
  position: relative;
  height: auto;
  padding: 0;
  font-size: $base-icon-size;

  &::before {
    content: '';
    position: absolute;
    width: $btn-borderless-hover-size;
    height: $btn-borderless-hover-size;
    left: 50% !important;
    top: 50% !important;
    margin-left: -$btn-borderless-hover-size / 2;
    margin-top: -$btn-borderless-hover-size / 2;
    border-radius: 50% !important;
  }


  + .btn-borderless {
    margin-left: $btn-borderless-margin
  }
}

.dense-layout {
  .btn {
    font-size: $btn-dense-font-size;
    height: $btn-dense-height;
    line-height: $btn-dense-height;
  }

  .btn-borderless {
    font-size: $base-dense-icon-size;
  }
}

.btn-raised {
  box-shadow: none !important;
}

@mixin button-flat-theme($buttons-colors, $dark-theme) {

  $btn-flat-default-color: $body-color-light-theme;

  @if ($dark-theme) {
    $btn-flat-default-color: $body-color-dark-theme;
  }

  @each $color, $value in map-merge($buttons-colors, (default: $btn-flat-default-color)) {
    .btn-flat.btn-#{$color} {
      @include button-flat-variant($value);
    }
  }

  .btn-flat {
    @include selectable-background($dark-theme, true, $btn-border-radius);
  }
}

@mixin button-borderless-theme($buttons-colors, $dark-theme) {

  $btn-flat-default-color: $body-color-light-theme;
  $btn-borderless-color: $btn-borderless-color-light-theme;
  $btn-disabled-color: $btn-disabled-color-light-theme;

  @if ($dark-theme) {
    $btn-flat-default-color: $body-color-dark-theme;
    $btn-borderless-color: $btn-borderless-color-dark-theme;
    $btn-disabled-color: $btn-disabled-color-dark-theme;
  }

  @each $color, $value in map-merge($buttons-colors, (default: $btn-borderless-color)) {
    .btn-borderless.btn-#{$color} {
      @include button-flat-variant($value);
    }
  }

  .btn-borderless {
    @include selectable-background($dark-theme, true, $btn-border-radius);
  }

  .btn-borderless {
    color: $btn-borderless-color;

    @include hover-focus {
      color: $btn-borderless-color;
    }

    &:disabled,
    &.disabled {
      color: $btn-disabled-color !important;
      &,
      &::before {
        background-color: transparent;
      }
    }
  }
}

@mixin buttons-theme($theme) {

  $theme-colors: map-get($theme, "colors");
  $dark-theme: map-get($theme, "dark");
  $uwp-style: map-get($theme, "uwp-style");

  $buttons-colors: (
    default: $btn-default-background-light,
    primary: map-get($theme-colors, "primary"),
    accent: map-get($theme-colors, "accent"),
    danger: map-get($theme-colors, "danger")
  );

  $btn-disabled-color: $btn-disabled-color-light-theme;
  $btn-disabled-background-color: $btn-disabled-background-light-theme;
  $btn-flat-default-color: $body-color-light-theme;
  $btn-borderless-color: $btn-borderless-color-light-theme;

  @if ($dark-theme) {
    $buttons-colors: map-merge($buttons-colors, (default: $btn-default-background-dark));
    $btn-disabled-color: $btn-disabled-color-dark-theme;
    $btn-disabled-background-color: $btn-disabled-background-dark-theme;
    $btn-flat-default-color: $body-color-dark-theme;
    $btn-borderless-color: $btn-borderless-color-dark-theme;
  }

  @each $color, $value in $buttons-colors {
    .btn-solid.btn-#{$color} {
      @include button-solid-variant($value);
    }
  }

  .btn {
    @include selectable-background(false, true, $btn-border-radius);

    &.disabled,
    &:disabled {
      color: $btn-disabled-color !important;

      background-color: $btn-disabled-background-color;
      &::before {
        background-color: transparent !important;
      }
    }
  }

  @include button-flat-theme($buttons-colors, $dark-theme);
  @include button-borderless-theme($buttons-colors, $dark-theme);

  @if ($uwp-style) {
    @include uwp-button($dark-theme);
  }
}
